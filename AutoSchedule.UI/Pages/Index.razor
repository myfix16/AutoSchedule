@page "/"
@inject HttpClient Http
@inject AppDataService DataService

<h3 class="ms-fontSize-42 ms-fontWeight-regular">Welcome to Auto Schedule</h3>
<p class="ms-fontSize-20 ms-fontWeight-regular">Auto Schedule allows you to arrange your academic schedule easily</p>
<br />

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div id="available-courses-section">
                <div id="course-list-label-section">
                    <h4>Available Courses</h4>
                </div>
                <div id="course-filter-section">
                    <div class='e-input-group' style="margin: 0px 0px 8px">
                        <input class='e-input' Placeholder="Search" type='text'>
                        <span class="e-input-group-icon e-input-search"></span>
                    </div>
                </div>
            </div>
            <div id="selected-courses-section">
                <div id="course-list-label-section">
                    <h4>Selected Courses</h4>
                </div>
                <div id="course-filter-section">
                    <SfButton>Make Schedule</SfButton>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div id="available-courses-section">
                <SfListBox TValue="string[]" TItem="CountryCode" DataSource="@GroupA" @ref="listbox1" Scope="@scope1"
                    SortOrder="Syncfusion.Blazor.DropDowns.SortOrder.Ascending" Height=@boxHeight>
                    <ListBoxFieldSettings Text="Name" />
                    <ListBoxToolbarSettings Items="@toolBarItems"></ListBoxToolbarSettings>
                </SfListBox>
            </div>
            <div id="selected-courses-section">
                <SfListBox TValue="string[]" TItem="CountryCode" @ref="listbox2" Scope="scope2" DataSource="@GroupB"
                    SortOrder="Syncfusion.Blazor.DropDowns.SortOrder.Ascending" Height=@boxHeight>
                    <ListBoxFieldSettings Text="Name" />
                </SfListBox>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div class="row">
        <div class="col-lg-6">
            <SfListBox TValue="string[]" DataSource="@Vehicles" TItem="VehicleData" Height="200px">
                <ListBoxFieldSettings Text="Text" Value="Id" />
            </SfListBox>
        </div>
        <div class="col-lg-6" style="margin: auto">
            <SfButton CssClass="view-schedule">View Schedule</SfButton>
        </div>
    </div>
    <br />
    <br />
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        DataService.AvailableSessions = await Http.GetFromJsonAsync<List<List<Session>>>("data/classList.json");
        DataService.AvailableClasses = DataService.AvailableSessions.Select(l => l.First().Name).Distinct();
    }

    public string boxHeight = "400px";

    // Things for the dual list box
    SfListBox<string[], CountryCode> listbox1;
    SfListBox<string[], CountryCode> listbox2;
    SfListBox<string[], CountryCode> scope1;
    SfListBox<string[], CountryCode> scope2;

    public string[] toolBarItems = new string[] { "MoveTo", "MoveFrom", "MoveAllTo", "MoveAllFrom" };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            scope1 = listbox2;
            scope2 = listbox1;
            StateHasChanged(); // Re-render component to update the ListBox component Scope references in each connected ListBox.
        }
    }
    public List<CountryCode> GroupA = new List<CountryCode>
    {
        new CountryCode{ Name = "Australia", Code = "AU" },
        new CountryCode{ Name = "Bermuda", Code = "BM" },
        new CountryCode{ Name = "Canada", Code = "CA" },
        new CountryCode{ Name = "Cameroon", Code = "CM" },
        new CountryCode{ Name = "Denmark", Code = "DK" },
        new CountryCode{ Name = "France", Code = "FR" },
        new CountryCode{ Name = "Finland", Code = "FI" }
    };

    public List<CountryCode> GroupB = new List<CountryCode>
    {
        new CountryCode{ Name = "India", Code = "IN" },
        new CountryCode{ Name = "Italy", Code = "IT" },
        new CountryCode{ Name = "Japan", Code = "JP" },
        new CountryCode{ Name = "Mexico", Code = "MX" },
        new CountryCode{ Name = "Norway", Code = "NO" },
        new CountryCode{ Name = "Poland", Code = "PL" },
        new CountryCode{ Name = "Switzerland", Code = "CH" }
    };

    public class CountryCode
    {
        public string Name { get; set; }
        public string Code { get; set; }
    }

    // Things for schedules view
    public List<VehicleData> Vehicles = new List<VehicleData>
    {
        new VehicleData { Text = "Hennessey Venom", Id = "Vehicle-01" },
        new VehicleData { Text = "Bugatti Chiron", Id = "Vehicle-02" },
        new VehicleData { Text = "Bugatti Veyron Super Sport", Id = "Vehicle-03" },
        new VehicleData { Text = "SSC Ultimate Aero", Id = "Vehicle-04" },
        new VehicleData { Text = "Koenigsegg CCR", Id = "Vehicle-05" },
        new VehicleData { Text = "McLaren F1", Id = "Vehicle-06" },
        new VehicleData { Text = "Aston Martin One- 77", Id = "Vehicle-07" },
        new VehicleData { Text = "Jaguar XJ220", Id = "Vehicle-08" }
    };

    public class VehicleData
    {
        public string Text { get; set; }
        public string Id { get; set; }
    }
}