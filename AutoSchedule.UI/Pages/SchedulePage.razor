@page "/schedulepage"
@inject AppDataService DataService

<h3 class="ms-fontSize-42 ms-fontWeight-regular">Schedules</h3>
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <AcademicCalendar @ref=academicCalendar @bind-ScheduleSource=ScheduleSource/>
        </div>
    </div>
    <br/>
    <br/>
    <div class="row">
        <div class="col-lg-9">
            <SfGrid DataSource="@Orders" Height=@courseSelectionHeight></SfGrid>
        </div>
        <div class="col-lg-3">
            <SfListView DataSource="@Data" Height=@courseSelectionHeight>
                <ListViewFieldSettings TValue="DataModel" Id="Id" Text="Text"></ListViewFieldSettings>
            </SfListView>
        </div>
    </div>
    <br/>
    <br/>
</div>

@code {
    private string courseSelectionHeight="500px";

    private AcademicCalendar academicCalendar;

    private Schedule _scheduleSource;
    [Parameter]
    public Schedule ScheduleSource
    {
        get => _scheduleSource;
        set { _scheduleSource = value; OnScheduleSourceChanged(); }
    }

    private void OnScheduleSourceChanged()
    {
        // TODO: Display the schedule in the calendar.
    }

    protected override void OnInitialized()
    {
        ScheduleSource = DataService.CurrentSchedule;

        Orders = Enumerable.Range(1, 75).Select(x => new Order()
        {
            OrderID = 1000 + x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Freight = 2.1 * x,
            OrderDate = DateTime.Now.AddDays(-x),
        }).ToList();
    }

    public List<Order> Orders { get; set; }

    public class Order {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
    }

    private DataModel[] Data =
     {
            new DataModel { Text = "ArtWork", Id = "list-01" },
            new DataModel { Text = "Abstract", Id = "list-02" },
            new DataModel { Text = "Modern Painting", Id = "list-03" },
            new DataModel { Text = "Ceramics", Id = "list-04" },
            new DataModel { Text = "Animation Art", Id = "list-05" },
            new DataModel { Text = "Oil Painting", Id = "list-06" }
    };
    class DataModel
    {
        public string Text { get; set; }
        public string Id { get; set; }
    }
}